{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsItem/DialogItem.jsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","to","dialogItem","name","TextArea","FormForControls","TextAreaReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","fielForm","placeholder","Dialogs","dialogsReducer","sendMessage","state","dialogsElements","dialogs","map","messagesElements","newMessageBody","messages","el","mes","dialogs_items","values","messsa","mapStateToPropsRedirect","isAuth","authReducer","compose","connect","dispatch","updateNewMessageBody","body","actions","updateNewMessageBodyCreator","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,0BAA0B,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,2B,qFCalNC,EARC,SAACC,GACb,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCQ3BC,EAZG,SAACJ,GAIf,IAAIK,EAAO,YAAaL,EAAMM,GAC9B,OACI,qBAAKL,UAAWC,IAAEK,OAAlB,SACA,cAAC,IAAD,CAASC,GAAIH,EAAMJ,UAAWC,IAAEO,WAAhC,SAA6CT,EAAMU,U,2BCHrDC,EAAUC,YAAgB,YAQ1BC,EAAoBC,YAAU,CAACC,KAAK,eAAhBD,EAPT,SAACd,GACd,OAAO,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACH,cAACC,EAAA,EAAD,CAAOC,UAAWR,EAAUV,UAAWC,IAAEkB,SAAUV,KAAK,SAASW,YAAY,iBAC7E,wDA4COC,EAhCuB,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,eAAeC,EAAgB,EAAhBA,YAGlDC,EAAQF,EAOTG,EAAkBD,EAAME,QAAQC,KAAI,SAACrB,GAAD,OAAe,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMJ,GAAIC,EAAOD,QAG7FuB,GAFiBJ,EAAMK,eAEJL,EAAMM,SAASH,KAAI,SAACI,GAAD,OAAU,cAAC,EAAD,CAAS7B,QAAS6B,EAAGC,UACrE,OACI,qCACA,sBAAKhC,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAEgC,cAAlB,SACKR,IAEL,qBAAKzB,UAAWC,IAAE6B,SAAlB,SACE,8BAAMF,SAGZ,8BACS,cAAChB,EAAD,CAAmBG,SArBX,SAACmB,GAEtBX,EAAYW,EAAOC,iB,qDC1BjBC,EAAyB,SAACZ,GAAD,MAAU,CACrCa,OAAOb,EAAMc,YAAYD,S,gBC8BdE,sBACXC,aAtBkB,SAAChB,GACnB,MAAO,CACHF,eAAgBE,EAAMF,mBASL,SAACmB,GACtB,MAAO,CACHC,qBAAsB,SAACC,GAAQF,EAASG,IAAQC,4BAA4BF,KAC5EpB,YAAa,SAACS,GAAOS,EAASG,IAAQE,mBAAmBd,UDpBjC,SAACe,GAAa,IAEpCC,EAFmC,4JAGrC,WACI,OAAIC,KAAKlD,MAAMsC,OACR,cAACU,EAAD,eAAeE,KAAKlD,QADG,cAAC,IAAD,CAAUQ,GAAI,eAJX,GAET2C,IAAMH,WAMvC,OAAOP,YAAQJ,EAARI,CAAiCQ,KCmB5BT,CAIVlB","file":"static/js/4.dbd9ecc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2yLZh\",\"dialogs_items\":\"Dialogs_dialogs_items__3hfzD\",\"fielForm\":\"Dialogs_fielForm__29teX\",\"dialogItem\":\"Dialogs_dialogItem__2Ciy-\",\"messages\":\"Dialogs_messages__oE8n4\",\"message\":\"Dialogs_message__2nlRs\"};","import React from \"react\";\r\nimport s from '../Dialogs.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Message = (props) =>{\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n   \r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from '../Dialogs.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem= (props)=>{\r\n\r\n   \r\n\r\n    let path = \"/dialogs/\" +props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n        <NavLink to={path} className={s.dialogItem}>{props.name}</NavLink>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.scss\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogsItem/DialogItem';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { FormForControls } from \"../common/FormsControl/FormsControl\";\r\n\r\nconst TextArea= FormForControls(\"textarea\")\r\nconst messForm = (props:any)=>{\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={TextArea} className={s.fielForm} name=\"messsa\" placeholder=\"write,please\"/>\r\n        <button>Send message</button>\r\n    </form>\r\n}\r\n\r\nconst TextAreaReduxForm = reduxForm({form:\"messageform\"})(messForm)\r\n\r\ntype DialogsType = {\r\n    dialogsReducer:any,\r\n    sendMessage : (mes:string) => void,\r\n    updateNewMessageBody : (body:string) => void\r\n}\r\n\r\nconst Dialogs:React.FC<DialogsType> = ({dialogsReducer,sendMessage}) =>{\r\n    \r\n\r\n let state = dialogsReducer;\r\nlet onSendMessageClick = (values:any)=>{\r\n    // props.store.dispatch(sendMessageCreator())\r\n    sendMessage(values.messsa)\r\n}\r\n\r\n\r\nlet dialogsElements = state.dialogs.map((dialog:any)=> <DialogItem name={dialog.name} id={dialog.id}/>);\r\nlet newMessageBody = state.newMessageBody;\r\n\r\nlet messagesElements = state.messages.map((el:any)=><Message message={el.mes}/>)\r\n    return (\r\n        <>\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n              <div>{messagesElements}</div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n                 <TextAreaReduxForm onSubmit={onSendMessageClick}/>\r\n                  \r\n              </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\n\r\nconst mapStateToPropsRedirect= (state)=>({\r\n    isAuth:state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component)=>{\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth){return <Navigate to={\"/login\"}/>}\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n   return connect(mapStateToPropsRedirect)(RedirectComponent)\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogsItem/DialogItem';\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { actions } from \"../../redux/dialogs-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state:AppStateType) => {\r\n    return {\r\n        dialogsReducer: state.dialogsReducer\r\n    }\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    sendMessage : (mes:string) => void,\r\n    updateNewMessageBody : (body:string) => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:any):mapDispatchToPropsType => {\r\n    return {\r\n        updateNewMessageBody: (body)=>{dispatch(actions.updateNewMessageBodyCreator(body))},\r\n        sendMessage: (mes)=>{dispatch(actions.sendMessageCreator(mes))}\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect \r\n    )\r\n    (Dialogs) as React.ComponentType\r\n"],"sourceRoot":""}