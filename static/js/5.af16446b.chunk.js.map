{"version":3,"sources":["components/Users/users.module.scss","components/common/Pagination/Paginator.jsx","components/Users/User/User.tsx","redux/users-selector.js","components/Users/UsersSearchForm.tsx","components/Users/UsersPresentation.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","curPerPortion","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","um","paginationBlock","onClick","filter","p","map","currentPage","selectPage","PageOne","onPageChanged","User","user","followingInProgress","unfollowThunkCreator","followThunkCreator","items_item","to","id","src","photos","small","profPhoto","userPhoto","name","status","followed","disabled","some","getUsers","createSelector","state","usersReducer","users","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","ifFetchin","getFollowingInProgress","getFilterInUserReducer","UsersSearchForm","useSelector","SignupSchema","Yup","shape","term","typeError","enableReinitialize","initialValues","friend","String","onSubmit","values","onFilterSearch","validationSchema","handleSubmit","type","placeholder","onChange","handleChange","errors","as","value","UsersPresentation","queryString","require","navigate","useNavigate","location","useLocation","dispatch","useDispatch","followThunkCreatorr","userId","unfollowThunkCreatorr","useEffect","parsed","parse","search","console","log","actualPage","actualFilter","page","Number","getUsersThunkCreator","pathname","searchFormBlock","pageNumber","actions","setCurrentPageAC","usersBlock","UsersContainer","ifFetching","Preloader"],"mappings":"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","file":"static/js/5.af16446b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1fmDA\",\"selectPage\":\"users_selectPage__1JCyQ\",\"PageOne\":\"users_PageOne__3GTh7\",\"usersBlock\":\"users_usersBlock__2VfVZ\",\"items_item\":\"users_items_item__1Z6R6\",\"searchFormBlock\":\"users_searchFormBlock__1dXsH\",\"paginationBlock\":\"users_paginationBlock__2FHUd\"};","import React, { useState } from \"react\";\r\nimport um from '../../Users/users.module.scss';\r\n\r\n\r\nexport const Paginator = ({curPerPortion=5,...props}) => {\r\n   \r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount=Math.ceil(props.totalUsersCount/curPerPortion);\r\n    let [portionNumber,setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber-1)*curPerPortion+1;\r\n    let rightPortionPageNumber = portionNumber*curPerPortion;\r\n    return (\r\n        <div className={um.paginationBlock}>\r\n            {leftPortionPageNumber-1!==0 ? <button onClick={()=>{setPortionNumber(portionNumber-1)}}>back</button> : \"\"}\r\n            {pages.filter(p =>  p >=leftPortionPageNumber && p<=rightPortionPageNumber).map(\r\n                (p)=>{\r\n                    return <span className={props.currentPage === p ? um.selectPage : \" \" && um.PageOne} onClick={() => { props.onPageChanged(p) }}>{p}</span>\r\n                }\r\n            ) \r\n            }\r\n             {portionCount>portionNumber ? <button onClick={()=>{setPortionNumber(portionNumber+1)}}>up</button> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport um from '../users.module.scss';\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserType } from \"../../common/types/types\";\r\nimport profPhoto from '../../Profile/ProfileInfo/prof.jpg';\r\ntype UserrType = {\r\n    user: UserType,\r\n    unfollowThunkCreator: (userId: number) => void,\r\n    followThunkCreator: (userId: number) => void,\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport const User: React.FC<UserrType> = ({ user, followingInProgress, unfollowThunkCreator, followThunkCreator }) => {\r\n    return (<div className={um.items_item}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small !== null ? user.photos.small : profPhoto} className={um.userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span><div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{user.id}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n        </span>\r\n        <div>\r\n            {user.followed\r\n                ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                    unfollowThunkCreator(user.id)\r\n                }}\r\n                >Unfollow</button>\r\n                : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                    followThunkCreator(user.id)\r\n                }}\r\n                >Follow</button>\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state)=>{\r\n    return state.usersReducer.users;\r\n};\r\n\r\n// export const getUsersSelector = (state)=>{\r\n//     return getUsers(state).filter(u=>true);\r\n// }\r\n\r\nexport const getUsers = createSelector(getUsersSelector,(users)=>{\r\n  return  users.filter(u=>true)\r\n})\r\n\r\nexport const getPageSize = (state)=>{\r\n    return state.usersReducer.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state)=>{\r\n    return state.usersReducer.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state)=>{\r\n    return state.usersReducer.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state)=>{\r\n    return state.usersReducer.ifFetchin;\r\n}\r\nexport const getFollowingInProgress = (state)=>{\r\n    return state.usersReducer.followingInProgress;\r\n}\r\nexport const getFilterInUserReducer = (state)=>{\r\n    return state.usersReducer.filter;\r\n}","import { ErrorMessage, Field, Formik } from \"formik\";\r\nimport { withFormik } from \"formik\";\r\nimport { filterType } from \"../../redux/users-reducer\";\r\n import * as Yup from 'yup';\r\nimport { getFilterInUserReducer } from \"../../redux/users-selector\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ntype UsersSearchFormType = {\r\n    onFilterSearch:(filter:filterType)=>void\r\n}\r\n\r\n\r\n\r\nexport const UsersSearchForm:React.FC<UsersSearchFormType> = (props)=>{\r\n\r\n    const filter: any = useSelector(getFilterInUserReducer);\r\n\r\nconst submit = (values:filterType)=>{\r\nprops.onFilterSearch(values)\r\n}\r\n\r\nconst SignupSchema  = Yup.object().shape({\r\n    term:Yup.string().typeError('Must be string')\r\n})\r\n\r\n    return <div>\r\n        <Formik\r\n        enableReinitialize={true}\r\n       initialValues={{term:filter.term,friend:String(filter.friend)}}\r\n       onSubmit={submit}\r\n      validationSchema={SignupSchema}\r\n     >\r\n       {props => (\r\n         <form onSubmit={props.handleSubmit}>\r\n          <Field type=\"text\" placeholder=\"search profile\" name=\"term\" onChange={props.handleChange}/>\r\n           {props.errors.term && <div>{props.errors.term}</div>}\r\n           <Field name=\"friend\" as=\"select\">\r\n   <option value=\"true\">Followed</option>\r\n   <option value=\"false\">Unfollowed</option>\r\n   <option value=\"null\">All</option>\r\n </Field>\r\n  <button type=\"submit\">Find</button>\r\n         </form>\r\n       )}\r\n     </Formik>\r\n    </div>\r\n}\r\n\r\n","import React, { FC, useEffect } from \"react\";\r\nimport um from './users.module.scss';\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport axios from \"axios\";\r\nimport { Paginator } from \"../common/Pagination/Paginator\";\r\nimport { User } from \"./User/User\";\r\nimport { UserType } from \"../common/types/types\";\r\nimport { Formik } from 'formik';\r\nimport { UsersSearchForm } from \"./UsersSearchForm\";\r\nimport { actions, filterType, followThunkCreator, getUsersThunkCreator, unfollowThunkCreator } from \"../../redux/users-reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentPage, getFilterInUserReducer, getFollowingInProgress, getPageSize, getTotalUsersCount, getUsers } from \"../../redux/users-selector\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\n\r\n\r\ntype UsersPresentationType = {\r\n}\r\n\r\n\r\nexport const UsersPresentation: React.FC<UsersPresentationType> = (props) => {\r\n\r\n    const queryString = require('query-string');\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation()\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const totalUsersCount = useSelector(getTotalUsersCount);\r\n    const currentPage = useSelector(getCurrentPage);\r\n    const pageSize = useSelector(getPageSize);\r\n    const users: Array<UserType> = useSelector(getUsers);\r\n    const filter: any = useSelector(getFilterInUserReducer);\r\n    const followingInProgress = useSelector(getFollowingInProgress);\r\n\r\n\r\n    const onFilterSearch = (filter: filterType) => {\r\n        dispatch(getUsersThunkCreator(1, pageSize, filter))\r\n    }\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(actions.setCurrentPageAC(pageNumber))\r\n        dispatch(getUsersThunkCreator(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const followThunkCreatorr = (userId: number | null) => {\r\n        dispatch(followThunkCreator(userId))\r\n\r\n    }\r\n    const unfollowThunkCreatorr = (userId: number | null) => {\r\n        dispatch(unfollowThunkCreator(userId))\r\n    }\r\n \r\n\r\n    useEffect(() => {\r\n\r\n        const parsed = queryString.parse(location.search);\r\n    console.log(parsed)\r\n        \r\n        let actualPage = currentPage;\r\n        let actualFilter = filter;\r\n        if (!!parsed.page) {\r\n            actualPage = Number(parsed.page)\r\n        }\r\n        if (!!parsed.term) {\r\n            actualFilter = { ...actualFilter, term: parsed.term }\r\n        }\r\n        if (!!parsed.friend) {\r\n            actualFilter = { ...actualFilter, friend: parsed.friend === \"null\" ? null : parsed.friend === \"true\" ? true : false }\r\n        }\r\n\r\n        dispatch(getUsersThunkCreator(actualPage, pageSize,actualFilter))\r\n    }, [])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        navigate({pathname:\"/users\",\r\n    search:`?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`})\r\n \r\n    },[filter,currentPage])\r\n\r\n \r\n    return <div>\r\n        <div className={um.searchFormBlock}><UsersSearchForm onFilterSearch={onFilterSearch} />\r\n        <Paginator currentPage={currentPage} totalUsersCount={totalUsersCount} pageSize={pageSize} onPageChanged={onPageChanged} />\r\n        </div>\r\n       <div className={um.usersBlock}> {\r\n            users.map(u => <User user={u} followingInProgress={followingInProgress} key={u.id} unfollowThunkCreator={unfollowThunkCreatorr} followThunkCreator={followThunkCreatorr} />)\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default UsersPresentation","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UsersPresentation from \"./UsersPresentation\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { getIsFetching } from \"../../redux/users-selector\";\r\n\r\n\r\n\r\n\r\n\r\ntype UsersPagePropsType = {\r\n\r\n}\r\n\r\nconst UsersContainer: React.FC<UsersPagePropsType> = (props) => {\r\n    const ifFetching = useSelector(getIsFetching)\r\n    return <>\r\n        {ifFetching ? <Preloader /> : null}\r\n        <UsersPresentation\r\n        />\r\n    </>\r\n}\r\nexport default UsersContainer\r\n"],"sourceRoot":""}